{"ast":null,"code":"var _jsxFileName = \"/home/amr/IdeaProjects/speech-text/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Icon, Popover, Badge, List, notification } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoId: 0\n    };\n\n    this.componentDidMount = () => {};\n\n    this.handleOnClick = () => {\n      let notifications = this.state.notifications;\n      notifications = this.state.newNotifications.concat(notifications);\n      console.log(notifications);\n      this.setState({\n        newNotifications: [],\n        notifications: notifications\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(List, {\n      dataSource: this.state.notifications,\n      renderItem: notification => React.createElement(List.Item, {\n        className: notification.isRead ? \"item-read\" : \"item-not-read\",\n        onClick: () => this.handleItemClick(notification),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          padding: \"2px 20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, notification.name), \" \", notification.msg)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amr/IdeaProjects/speech-text/src/App.js"],"names":["React","Component","Icon","Popover","Badge","List","notification","App","state","todos","todoId","componentDidMount","handleOnClick","notifications","newNotifications","concat","console","log","setState","render","isRead","handleItemClick","padding","name","msg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,YAArC,QAAyD,MAAzD;AACA,OAAO,oBAAP;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BC,iBAN0B,GAMN,MAAM,CAAE,CANF;;AAAA,SAQ1BC,aAR0B,GAQV,MAAM;AACpB,UAAIC,aAAa,GAAG,KAAKL,KAAL,CAAWK,aAA/B;AACAA,MAAAA,aAAa,GAAG,KAAKL,KAAL,CAAWM,gBAAX,CAA4BC,MAA5B,CAAmCF,aAAnC,CAAhB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACA,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,gBAAgB,EAAE,EAApB;AAAwBD,QAAAA,aAAa,EAAEA;AAAvC,OAAd;AACD,KAbyB;AAAA;;AAe1BM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWK,aADzB;AAEE,MAAA,UAAU,EAAEP,YAAY,IACtB,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,SAAS,EAAEA,YAAY,CAACc,MAAb,GAAsB,WAAtB,GAAoC,eADjD;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,CAAqBf,YAArB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAM,QAAA,KAAK,EAAE;AAAEgB,UAAAA,OAAO,EAAE;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIhB,YAAY,CAACiB,IAAjB,CADF,OAC8BjB,YAAY,CAACkB,GAD3C,CAJF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiBD;;AAjCyB;;AAoC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon, Popover, Badge, List, notification } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: [],\n    todoId: 0\n  };\n\n  componentDidMount = () => {};\n\n  handleOnClick = () => {\n    let notifications = this.state.notifications;\n    notifications = this.state.newNotifications.concat(notifications);\n    console.log(notifications);\n    this.setState({ newNotifications: [], notifications: notifications });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <List\n          dataSource={this.state.notifications}\n          renderItem={notification => (\n            <List.Item\n              className={notification.isRead ? \"item-read\" : \"item-not-read\"}\n              onClick={() => this.handleItemClick(notification)}\n            >\n              <span style={{ padding: \"2px 20px\" }}>\n                <b>{notification.name}</b> {notification.msg}\n              </span>\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}