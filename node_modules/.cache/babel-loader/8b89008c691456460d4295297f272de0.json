{"ast":null,"code":"var _jsxFileName = \"/home/amr/IdeaProjects/speech-text/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Button, Input, List, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nconst SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = \"en-US\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoId: 0,\n      text: \"\",\n      listening: false\n    };\n\n    this.handleClick = () => {\n      if (this.state.text !== \"\") {\n        this.addTodo(this.state.text);\n        this.setState({\n          text: \"\"\n        });\n      }\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.addTodo = text => {\n      const todos = this.state.todos;\n      const todo = {\n        id: this.state.todoId + 1,\n        text: text,\n        completed: false\n      };\n      const newTodos = [...todos, todo];\n      this.setState({\n        todos: newTodos,\n        todoId: this.state.todoId + 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Basic usage\",\n      className: \"input\",\n      value: this.state.text,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Primary\"), React.createElement(List, {\n      dataSource: this.state.todos,\n      renderItem: todo => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Typography.Text, {\n        mark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"[ITEM]\"), \" \", todo.text),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amr/IdeaProjects/speech-text/src/App.js"],"names":["React","Component","Button","Input","List","Typography","SpeechRecognition","webkitSpeechRecognition","recognition","continous","interimResults","lang","App","state","todos","todoId","text","listening","handleClick","addTodo","setState","handleInputChange","event","target","value","todo","id","completed","newTodos","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,UAA9B,QAAgD,MAAhD;AACA,OAAO,oBAAP;AACA,OAAO,WAAP;AAEA,MAAMC,iBAAiB,GAAGA,iBAAiB,IAAIC,uBAA/C;AACA,MAAMC,WAAW,GAAG,IAAIF,iBAAJ,EAApB;AAEAE,WAAW,CAACC,SAAZ,GAAwB,IAAxB;AACAD,WAAW,CAACE,cAAZ,GAA6B,IAA7B;AACAF,WAAW,CAACG,IAAZ,GAAmB,OAAnB;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BY,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,CAFF;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,SAAS,EAAE;AAJL,KADkB;;AAAA,SAQ1BC,WAR0B,GAQZ,MAAM;AAClB,UAAI,KAAKL,KAAL,CAAWG,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,aAAKG,OAAL,CAAa,KAAKN,KAAL,CAAWG,IAAxB;AACA,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD;AACF,KAbyB;;AAAA,SAe1BK,iBAf0B,GAeNC,KAAK,IAAI;AAC3B,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAd;AACD,KAjByB;;AAAA,SAmB1BL,OAnB0B,GAmBhBH,IAAI,IAAI;AAChB,YAAMF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,YAAMW,IAAI,GAAG;AAAEC,QAAAA,EAAE,EAAE,KAAKb,KAAL,CAAWE,MAAX,GAAoB,CAA1B;AAA6BC,QAAAA,IAAI,EAAEA,IAAnC;AAAyCW,QAAAA,SAAS,EAAE;AAApD,OAAb;AACA,YAAMC,QAAQ,GAAG,CAAC,GAAGd,KAAJ,EAAWW,IAAX,CAAjB;AACA,WAAKL,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEc,QAAT;AAAmBb,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,GAAoB;AAA/C,OAAd;AACD,KAxByB;AAAA;;AA0B1Bc,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,aADd;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWG,IAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKK,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKH,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWC,KADzB;AAEE,MAAA,UAAU,EAAEW,IAAI,IACd,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACkDA,IAAI,CAACT,IADvD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAqBD;;AAhDyB;;AAmD5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Input, List, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nconst SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\n\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = \"en-US\";\n\nclass App extends Component {\n  state = {\n    todos: [],\n    todoId: 0,\n    text: \"\",\n    listening: false\n  };\n\n  handleClick = () => {\n    if (this.state.text !== \"\") {\n      this.addTodo(this.state.text);\n      this.setState({ text: \"\" });\n    }\n  };\n\n  handleInputChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  addTodo = text => {\n    const todos = this.state.todos;\n    const todo = { id: this.state.todoId + 1, text: text, completed: false };\n    const newTodos = [...todos, todo];\n    this.setState({ todos: newTodos, todoId: this.state.todoId + 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Input\n          placeholder=\"Basic usage\"\n          className=\"input\"\n          value={this.state.text}\n          onChange={this.handleInputChange}\n        />\n        <Button type=\"primary\" onClick={this.handleClick}>\n          Primary\n        </Button>\n        <List\n          dataSource={this.state.todos}\n          renderItem={todo => (\n            <List.Item>\n              <Typography.Text mark>[ITEM]</Typography.Text> {todo.text}\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}