{"ast":null,"code":"var _jsxFileName = \"/home/amr/IdeaProjects/scalable-push-notification/push-notification-client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Icon, Popover, Badge, List, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newNotifications: [],\n      notifications: []\n    };\n\n    this.componentDidMount = () => {// let newNotifications = this.state.newNotifications;\n      // newNotifications.push({\n      //   name: \"Amr\",\n      //   msg: \"commented on your post\",\n      //   isRead: false\n      // });\n      // newNotifications.push({\n      //   name: \"John\",\n      //   msg: \"started following you\",\n      //   isRead: false\n      // });\n      // newNotifications.push({\n      //   name: \"Amr\",\n      //   msg: \"commented on your post\",\n      //   isRead: true\n      // });\n      // this.setState({ newNotifications });\n    };\n\n    this.handleOnClick = () => {\n      let notifications = this.state.notifications;\n      notifications = notifications.concat(this.state.newNotifications);\n      this.setState({\n        newNotifications: [],\n        notifications: notifications\n      });\n    };\n  }\n\n  render() {\n    let iconClass = \"icon-dimmed\";\n\n    if (this.state.newNotifications.length > 0) {\n      iconClass = \"icon-active\";\n    }\n\n    const text = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Notifications\"));\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(List, {\n      dataSource: this.state.notifications,\n      renderItem: notification => React.createElement(List.Item, {\n        className: notification.isRead ? \"item-read\" : \"item-not-read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          padding: \"2px 20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, notification.name), \" \", notification.msg)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menuBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Push Notification\")), React.createElement(\"div\", {\n      className: \"menuCon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rightMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"icon-dimmed\",\n      type: \"home\",\n      theme: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"icon-dimmed\",\n      type: \"message\",\n      theme: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.handleOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      placement: \"bottomRight\",\n      title: text,\n      content: content,\n      trigger: \"click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      offset: [-2, 10],\n      count: this.state.newNotifications.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: iconClass,\n      type: \"bell\",\n      theme: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amr/IdeaProjects/scalable-push-notification/push-notification-client/src/App.js"],"names":["React","Component","Icon","Popover","Badge","List","Typography","App","state","newNotifications","notifications","componentDidMount","handleOnClick","concat","setState","render","iconClass","length","text","content","notification","isRead","padding","name","msg"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon, Popover, Badge, List, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    newNotifications: [],\n    notifications: []\n  };\n\n  componentDidMount = () => {\n    // let newNotifications = this.state.newNotifications;\n    // newNotifications.push({\n    //   name: \"Amr\",\n    //   msg: \"commented on your post\",\n    //   isRead: false\n    // });\n    // newNotifications.push({\n    //   name: \"John\",\n    //   msg: \"started following you\",\n    //   isRead: false\n    // });\n    // newNotifications.push({\n    //   name: \"Amr\",\n    //   msg: \"commented on your post\",\n    //   isRead: true\n    // });\n    // this.setState({ newNotifications });\n  };\n\n  handleOnClick = () => {\n    let notifications = this.state.notifications;\n\n    notifications = notifications.concat(this.state.newNotifications);\n\n    this.setState({ newNotifications: [], notifications: notifications });\n  };\n  render() {\n    let iconClass = \"icon-dimmed\";\n\n    if (this.state.newNotifications.length > 0) {\n      iconClass = \"icon-active\";\n    }\n\n    const text = (\n      <span>\n        <b>Notifications</b>\n      </span>\n    );\n    const content = (\n      <div>\n        <List\n          dataSource={this.state.notifications}\n          renderItem={notification => (\n            <List.Item\n              className={notification.isRead ? \"item-read\" : \"item-not-read\"}\n            >\n              <span style={{ padding: \"2px 20px\" }}>\n                <b>{notification.name}</b> {notification.msg}\n              </span>\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"menuBar\">\n          <div className=\"logo\">\n            <a href=\"#\">Push Notification</a>\n          </div>\n          <div className=\"menuCon\">\n            <div className=\"rightMenu\">\n              <a href=\"#\">\n                <Icon className=\"icon-dimmed\" type=\"home\" theme=\"filled\" />\n              </a>\n              <a href=\"#\">\n                <Icon className=\"icon-dimmed\" type=\"message\" theme=\"filled\" />\n              </a>\n              <a href=\"#\" onClick={this.handleOnClick}>\n                <Popover\n                  placement=\"bottomRight\"\n                  title={text}\n                  content={content}\n                  trigger=\"click\"\n                >\n                  <Badge\n                    offset={[-2, 10]}\n                    count={this.state.newNotifications.length}\n                  >\n                    <Icon className={iconClass} type=\"bell\" theme=\"filled\" />\n                  </Badge>\n                </Popover>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}